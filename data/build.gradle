apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply from: '../jacoco.gradle'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"https://gist.githubusercontent.com/eis6aer/\""

    }

    buildTypes {

        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

def libs = rootProject.ext.mainDependencies
def kaptLibs = rootProject.ext.kaptDependencies
def testLibs = rootProject.ext.testDependencies

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':domain')

    implementation libs.retroFit
    implementation libs.retroFitRxJava
    implementation libs.retroFitGson
    implementation libs.retroFitHttpInterceptor
    implementation libs.daggerAndroid
    implementation libs.daggerAndroidSupport

    kapt kaptLibs.daggerCompiler,
            kaptLibs.daggerAndroidProcessor

    annotationProcessor kaptLibs.daggerCompiler,
            kaptLibs.daggerAndroidProcessor

    implementation 'androidx.appcompat:appcompat:1.0.2'
    testImplementation 'junit:junit:4.12'
    testImplementation testLibs.nhaarmanMockito
    testImplementation testLibs.mockitoInline
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

android.testOptions.unitTests.all {
    // Configure whether failing tests should fail the build
    ignoreFailures false

    testLogging {
        events "passed", "failed", "standardOut", "standardError"
    }
}
